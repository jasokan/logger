package com.company.speedment.test.sql696688.db0.sql696688.borrowed;

import com.company.speedment.test.sql696688.db0.sql696688.employee.Employee;
import com.speedment.Entity;
import com.speedment.field.ComparableField;
import com.speedment.field.ComparableForeignKeyField;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.ComparableForeignKeyFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the Table
 * 'sql696688.db0.sql696688.borrowed'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface Borrowed extends Entity<Borrowed> {
    
    /**
     * This Field corresponds to the {@link Borrowed} field that can be obtained
     * using the {@link Borrowed#getRef()} method.
     */
    public final static ComparableField<Borrowed, Integer> REF = new ComparableFieldImpl<>("ref", Borrowed::getRef, Borrowed::setRef);
    /**
     * This Field corresponds to the {@link Borrowed} field that can be obtained
     * using the {@link Borrowed#getEmployeeid()} method.
     */
    public final static ComparableForeignKeyField<Borrowed, Short, Employee> EMPLOYEEID = new ComparableForeignKeyFieldImpl<>("employeeid", Borrowed::getEmployeeid, Borrowed::setEmployeeid, Borrowed::findEmployeeid);
    /**
     * This Field corresponds to the {@link Borrowed} field that can be obtained
     * using the {@link Borrowed#getBook()} method.
     */
    public final static StringField<Borrowed> BOOK = new StringFieldImpl<>("book", o -> o.getBook().orElse(null), Borrowed::setBook);
    
    /**
     * Returns the ref of this Borrowed. The ref field corresponds to the
     * database column db0.sql696688.borrowed.ref.
     * 
     * @return the ref of this Borrowed
     */
    Integer getRef();
    
    /**
     * Returns the employeeid of this Borrowed. The employeeid field corresponds
     * to the database column db0.sql696688.borrowed.employeeid.
     * 
     * @return the employeeid of this Borrowed
     */
    Short getEmployeeid();
    
    /**
     * Returns the book of this Borrowed. The book field corresponds to the
     * database column db0.sql696688.borrowed.book.
     * 
     * @return the book of this Borrowed
     */
    Optional<String> getBook();
    
    /**
     * Sets the ref of this Borrowed. The ref field corresponds to the database
     * column db0.sql696688.borrowed.ref.
     * 
     * @param ref to set of this Borrowed
     * @return this Borrowed instance
     */
    Borrowed setRef(Integer ref);
    
    /**
     * Sets the employeeid of this Borrowed. The employeeid field corresponds to
     * the database column db0.sql696688.borrowed.employeeid.
     * 
     * @param employeeid to set of this Borrowed
     * @return this Borrowed instance
     */
    Borrowed setEmployeeid(Short employeeid);
    
    /**
     * Sets the book of this Borrowed. The book field corresponds to the database
     * column db0.sql696688.borrowed.book.
     * 
     * @param book to set of this Borrowed
     * @return this Borrowed instance
     */
    Borrowed setBook(String book);
    
    /**
     * Finds and returns the foreign key Entity {@link Employee} referenced by
     * the field that can be obtained using {@link Borrowed#getEmployeeid()}.<p>
     * N.B. The current implementation only supports lazy-loading of the
     * referenced Entities. This means that if you traverse N Borrowed entities
     * and call this method for each one, there will be N SQL-queries executed.
     * 
     * @return the foreign key Entity {@link Employee} referenced by the field
     * that can be obtained using {@link Borrowed#getEmployeeid()}
     */
    Employee findEmployeeid();
}