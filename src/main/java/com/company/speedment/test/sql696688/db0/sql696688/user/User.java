package com.company.speedment.test.sql696688.db0.sql696688.user;

import com.speedment.Entity;
import com.speedment.field.ComparableField;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the Table
 * 'sql696688.db0.sql696688.user'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface User extends Entity<User> {
    
    /**
     * This Field corresponds to the {@link User} field that can be obtained
     * using the {@link User#getId()} method.
     */
    public final static ComparableField<User, Long> ID = new ComparableFieldImpl<>("id", User::getId, User::setId);
    /**
     * This Field corresponds to the {@link User} field that can be obtained
     * using the {@link User#getName()} method.
     */
    public final static StringField<User> NAME = new StringFieldImpl<>("name", User::getName, User::setName);
    /**
     * This Field corresponds to the {@link User} field that can be obtained
     * using the {@link User#getAge()} method.
     */
    public final static ComparableField<User, Integer> AGE = new ComparableFieldImpl<>("age", User::getAge, User::setAge);
    
    /**
     * Returns the id of this User. The id field corresponds to the database
     * column db0.sql696688.user.id.
     * 
     * @return the id of this User
     */
    Long getId();
    
    /**
     * Returns the name of this User. The name field corresponds to the database
     * column db0.sql696688.user.name.
     * 
     * @return the name of this User
     */
    String getName();
    
    /**
     * Returns the age of this User. The age field corresponds to the database
     * column db0.sql696688.user.age.
     * 
     * @return the age of this User
     */
    Integer getAge();
    
    /**
     * Sets the id of this User. The id field corresponds to the database column
     * db0.sql696688.user.id.
     * 
     * @param id to set of this User
     * @return this User instance
     */
    User setId(Long id);
    
    /**
     * Sets the name of this User. The name field corresponds to the database
     * column db0.sql696688.user.name.
     * 
     * @param name to set of this User
     * @return this User instance
     */
    User setName(String name);
    
    /**
     * Sets the age of this User. The age field corresponds to the database
     * column db0.sql696688.user.age.
     * 
     * @param age to set of this User
     * @return this User instance
     */
    User setAge(Integer age);
}